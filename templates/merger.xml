<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>{{ PACKAGING_URL }}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/{{ PACKAGING_BRANCH_U }}</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>*/{{ PACKAGING_BRANCH_S }}</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>*/{{ DEFAULT_BRANCH }}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>{{ NAME }}</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>jobgenerator, merger</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    <hudson.triggers.SCMTrigger>
      <spec></spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
cd {{ NAME }}
git checkout {{ DEFAULT_BRANCH }}
git branch -a | egrep "remotes/origin/{{ PACKAGING_BRANCH_S }}" &amp;&amp; git checkout {{ PACKAGING_BRANCH_S }} || git checkout -b {{ PACKAGING_BRANCH_S }}
git merge --ff-only {{ DEFAULT_BRANCH }}
git push --set-upstream origin {{ PACKAGING_BRANCH_S }}
git branch -a | egrep "remotes/origin/{{ PACKAGING_BRANCH_U }}" &amp;&amp; git checkout {{ PACKAGING_BRANCH_U }} || git checkout -b {{ PACKAGING_BRANCH_U }}
git merge --ff-only {{ PACKAGING_BRANCH_S }}
git push --set-upstream origin {{ PACKAGING_BRANCH_U }}
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.37">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.WsCleanup>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.3">
            <worstResult>
              <name>ABORTED</name>
              <ordinal>4</ordinal>
              <color>ABORTED</color>
              <completeBuild>false</completeBuild>
            </worstResult>
            <bestResult>
              <name>SUCCESS</name>
              <ordinal>0</ordinal>
              <color>BLUE</color>
              <completeBuild>true</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <jenkins.plugins.http__request.HttpRequest plugin="http_request@1.8.26">
              <url>http://lugito.lubuntu.me:5000/jenkinsnag</url>
              <ignoreSslErrors>false</ignoreSslErrors>
              <httpMode>POST</httpMode>
              <httpProxy></httpProxy>
              <passBuildParameters>false</passBuildParameters>
              <validResponseCodes>100:399</validResponseCodes>
              <validResponseContent></validResponseContent>
              <acceptType>NOT_SET</acceptType>
              <contentType>NOT_SET</contentType>
              <outputFile></outputFile>
              <timeout>0</timeout>
              <consoleLogResponseBody>false</consoleLogResponseBody>
              <quiet>false</quiet>
              <authentication></authentication>
              <requestBody>{&quot;PROJECT&quot;: &quot;merger_{{ NAME }}&quot;}</requestBody>
              <uploadFile></uploadFile>
              <multipartName></multipartName>
              <wrapAsMultipart>false</wrapAsMultipart>
              <useSystemProperties>false</useSystemProperties>
              <customHeaders class="empty-list"/>
            </jenkins.plugins.http__request.HttpRequest>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
  </publishers>
  <buildWrappers/>
</project>
